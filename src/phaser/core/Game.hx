package phaser.core;

@:native("Phaser.Game")
extern class Game {
	function new (?width:Float = 800, ?height:Float = 600, ?renderer:Float, ?parent:String = '', ?state:Dynamic, ?transparent:Bool = false, ?antialias:Bool = true, ?physicsConfig:Dynamic);
	var id:Float;
	var config:Dynamic;
	var physicsConfig:Dynamic;
	var parent:Dynamic;
	var width:Float;
	var height:Float;
	var transparent:Bool;
	var antialias:Bool;
	var renderer:Float;
	var renderType:Float;
	var state:Float;
	var isBooted:Bool;
	var isRunning:Bool;
	var raf:phaser.system.RequestAnimationFrame;
	var add:phaser.gameobjects.GameObjectFactory;
	var make:phaser.gameobjects.GameObjectCreator;
	var cache:phaser.loader.Cache;
	var input:phaser.input.Input;
	var load:phaser.loader.Loader;
	var math:phaser.math.Math;
	var net:phaser.net.Net;
	var scale:phaser.core.ScaleManager;
	var sound:phaser.sound.SoundManager;
	var stage:phaser.core.Stage;
	var time:Dynamic;
	var tweens:phaser.tween.TweenManager;
	var world:phaser.core.World;
	var physics:phaser.physics.Physics;
	var rnd:phaser.math.RandomDataGenerator;
	var device:phaser.system.Device;
	var camera:Dynamic;
	var canvas:Dynamic;
	var context:Dynamic;
	var debug:phaser.utils.Debug;
	var particles:phaser.particles.Particles;
	var stepping(default, null):Bool;
	var pendingStep(default, null):Bool;
	var stepCount(default, null):Float;
	var onPause:phaser.core.Signal;
	var onResume:phaser.core.Signal;
	var onBlur:phaser.core.Signal;
	var onFocus:phaser.core.Signal;
	var _paused:Bool;
	var _codePaused:Bool;
	function parseConfig ():Void;
	function boot ():Void;
	function showDebugHeader ():Void;
	function setUpRenderer ():Void;
	function update (time:Float):Void;
	function enableStep ():Void;
	function disableStep ():Void;
	function step ():Void;
	function destroy ():Void;
	function gamePaused (event:Dynamic):Void;
	function gameResumed (event:Dynamic):Void;
	function focusLoss (event:Dynamic):Void;
	function focusGain (event:Dynamic):Void;
	var paused:Bool;
}
