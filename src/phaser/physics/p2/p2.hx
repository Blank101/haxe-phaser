package phaser.physics.p2;

@:native("World")
extern class p2 {
	var mul:Dynamic;
	var sub:Dynamic;
	var div:Dynamic;
	var dist:Dynamic;
	var sqrDist:Dynamic;
	var len:Dynamic;
	var sqrLen:Dynamic;
	var forEach:Dynamic;
	function new ();
	var vertices:Array<Dynamic>;
	var lowerBound:Array<Dynamic>;
	var upperBound:Array<Dynamic>;
	var result:Array<Dynamic>;
	var world:phaser.physics.p2.p2;
	var useBoundingBoxes:Dynamic;
	var contactEquations:Dynamic;
	var frictionEquations:Dynamic;
	var enableFriction:Dynamic;
	var slipForce:Dynamic;
	var frictionCoefficient:Dynamic;
	var surfaceVelocity:Dynamic;
	var restitution:Dynamic;
	var stiffness:Dynamic;
	var frictionStiffness:Dynamic;
	var frictionRelaxation:Dynamic;
	var root:Dynamic;
	var axisListX:Array<Dynamic>;
	var axisListY:Array<Dynamic>;
	var equations:Array<Dynamic>;
	var bodyA:Dynamic;
	var bodyB:Dynamic;
	var DISTANCE:Dynamic;
	var distance:Dynamic;
	var angle:Dynamic;
	var ratio:Dynamic;
	var localAnchorA:Dynamic;
	var localAnchorB:Dynamic;
	var localAxisA:Dynamic;
	var position:Dynamic;
	var lowerLimitEnabled:Dynamic;
	var upperLimitEnabled:Dynamic;
	var lowerLimit:Dynamic;
	var upperLimit:Dynamic;
	var motorEquation:Dynamic;
	var motorEnabled:Dynamic;
	var motorSpeed:Dynamic;
	var ri:Array<Dynamic>;
	var rj:Array<Dynamic>;
	var ni:Array<Dynamic>;
	var firstImpact:Dynamic;
	var shapeA:Dynamic;
	var shapeB:Dynamic;
	var minForce:Dynamic;
	var maxForce:Dynamic;
	var bi:Dynamic;
	var bj:Dynamic;
	var relaxation:Dynamic;
	var G:Array<Dynamic>;
	var offset:Dynamic;
	var multiplier:Dynamic;
	var relativeVelocity:Dynamic;
	var enabled:Dynamic;
	var t:Dynamic;
	var contactEquation:Dynamic;
	var id:Dynamic;
	var materialA:Dynamic;
	var materialB:Dynamic;
	var friction:Dynamic;
	var exports:Dynamic;
	var shapes:Array<Dynamic>;
	var shapeOffsets:Array<Dynamic>;
	var shapeAngles:Array<Dynamic>;
	var mass:Float;
	var invMass:Float;
	var inertia:Float;
	var invInertia:Float;
	var fixedRotation:Dynamic;
	var interpolatedPosition:Array<Dynamic>;
	var velocity:Dynamic;
	var vlambda:Dynamic;
	var wlambda:Dynamic;
	var angularVelocity:Float;
	var force:Dynamic;
	var angularForce:Float;
	var damping:Dynamic;
	var angularDamping:Dynamic;
	var motionState:Float;
	var boundingRadius:Dynamic;
	var aabb:Dynamic;
	var aabbNeedsUpdate:Dynamic;
	var allowSleep:Dynamic;
	var sleepState:Dynamic;
	var sleepSpeedLimit:Dynamic;
	var sleepTimeLimit:Dynamic;
	var gravityScale:Dynamic;
	var sleepyEvent:Dynamic;
	var sleepEvent:Dynamic;
	var wakeUpEvent:Dynamic;
	static var DYNAMIC:Dynamic;
	static var STATIC:Dynamic;
	static var KINEMATIC:Dynamic;
	static var AWAKE:Dynamic;
	static var SLEEPY:Dynamic;
	static var SLEEPING:Dynamic;
	var restLength:Float;
	var length:Dynamic;
	var radius:Dynamic;
	var centerOfMass:Dynamic;
	var triangles:Array<Dynamic>;
	var width:Dynamic;
	var height:Dynamic;
	var collisionGroup:Dynamic;
	var collisionMask:Dynamic;
	var material:Dynamic;
	var area:Dynamic;
	var sensor:Dynamic;
	var CIRCLE:Dynamic;
	var PARTICLE:Dynamic;
	var PLANE:Dynamic;
	var CONVEX:Dynamic;
	var LINE:Dynamic;
	var RECTANGLE:Dynamic;
	var CAPSULE:Dynamic;
	var HEIGHTFIELD:Dynamic;
	var iterations:Dynamic;
	var tolerance:Dynamic;
	var useGlobalEquationParameters:Dynamic;
	var useZeroRHS:Dynamic;
	var skipFrictionIterations:Dynamic;
	var bodies:Array<Dynamic>;
	var subsolver:Dynamic;
	var numIslands:Float;
	var beforeSolveIslandEvent:Dynamic;
	var equationSortFunction:Dynamic;
	static var ARRAY:Array<Dynamic>;
	var springs:Array<Dynamic>;
	var solver:Dynamic;
	var narrowphase:Dynamic;
	var a0:Dynamic;
	var doPofiling:Dynamic;
	var lastStepTime:Dynamic;
	var broadphase:Dynamic;
	var constraints:Array<Dynamic>;
	var defaultFriction:Dynamic;
	var defaultRestitution:Dynamic;
	var lastTimeStep:Dynamic;
	var applySpringForces:Dynamic;
	var applyDamping:Dynamic;
	var applyGravity:Dynamic;
	var solveConstraints:Dynamic;
	var contactMaterials:Array<Dynamic>;
	var time:Dynamic;
	var emitImpactEvent:Dynamic;
	var postStepEvent:Dynamic;
	var addBodyEvent:Dynamic;
	var removeBodyEvent:Dynamic;
	var addSpringEvent:Dynamic;
	var impactEvent:Dynamic;
	var postBroadphaseEvent:Dynamic;
	var beginContactEvent:Dynamic;
	var endContactEvent:Dynamic;
	var preSolveEvent:Dynamic;
}
