package phaser.input;

@:native("Phaser.InputHandler")
extern class InputHandler {
	function new (sprite:phaser.gameobjects.Sprite);
	var sprite:phaser.gameobjects.Sprite;
	var game:phaser.core.Game;
	var enabled:Bool;
	var priorityID:Float;
	var useHandCursor:Bool;
	var _setHandCursor:Bool;
	var isDragged:Bool;
	var allowHorizontalDrag:Bool;
	var allowVerticalDrag:Bool;
	var bringToTop:Bool;
	var snapOffset:phaser.geom.Point;
	var snapOnDrag:Bool;
	var snapOnRelease:Bool;
	var snapX:Float;
	var snapY:Float;
	var snapOffsetX:Float;
	var snapOffsetY:Float;
	var pixelPerfectOver:Float;
	var pixelPerfectClick:Float;
	var pixelPerfectAlpha:Float;
	var draggable:Bool;
	var boundsRect:phaser.geom.Rectangle;
	var boundsSprite:phaser.gameobjects.Sprite;
	var consumePointerEvent:Bool;
	var _tempPoint:phaser.geom.Point;
	var _pointerData:Dynamic;
	function start (priority:Float, useHandCursor:Bool):phaser.gameobjects.Sprite;
	function reset ():Void;
	function stop ():Void;
	function destroy ():Void;
	function validForInput (highestID:Float, highestRenderID:Float):Bool;
	function pointerX (pointer:phaser.input.Pointer):Float;
	function pointerY (pointer:phaser.input.Pointer):Float;
	function pointerDown (pointer:phaser.input.Pointer):Bool;
	function pointerUp (pointer:phaser.input.Pointer):Bool;
	function pointerTimeDown (pointer:phaser.input.Pointer):Float;
	function pointerTimeUp (pointer:phaser.input.Pointer):Float;
	function pointerOver (?index:Float):Bool;
	function pointerOut (?index:Float):Bool;
	function pointerTimeOver (pointer:phaser.input.Pointer):Float;
	function pointerTimeOut (pointer:phaser.input.Pointer):Float;
	function pointerDragged (pointer:phaser.input.Pointer):Bool;
	function checkPointerDown (pointer:phaser.input.Pointer):Bool;
	function checkPointerOver (pointer:phaser.input.Pointer):Bool;
	function checkPixel (x:Float, y:Float, ?pointer:phaser.input.Pointer):Bool;
	function update (pointer:phaser.input.Pointer):Void;
	function _pointerOverHandler (pointer:phaser.input.Pointer):Void;
	function _pointerOutHandler (pointer:phaser.input.Pointer):Void;
	function _touchedHandler (pointer:phaser.input.Pointer):Void;
	function _releasedHandler (pointer:phaser.input.Pointer):Void;
	function updateDrag (pointer:phaser.input.Pointer):Bool;
	function justOver (pointer:phaser.input.Pointer, delay:Float):Bool;
	function justOut (pointer:phaser.input.Pointer, delay:Float):Bool;
	function justPressed (pointer:phaser.input.Pointer, delay:Float):Bool;
	function justReleased (pointer:phaser.input.Pointer, delay:Float):Bool;
	function overDuration (pointer:phaser.input.Pointer):Float;
	function downDuration (pointer:phaser.input.Pointer):Float;
	function enableDrag (?lockCenter:Bool = false, ?bringToTop:Bool = false, ?pixelPerfect:Bool = false, ?alphaThreshold:Bool = 255, ?boundsRect:phaser.geom.Rectangle, ?boundsSprite:phaser.gameobjects.Sprite):Void;
	function disableDrag ():Void;
	function startDrag (pointer:phaser.input.Pointer):Void;
	function stopDrag (pointer:phaser.input.Pointer):Void;
	function setDragLock (?allowHorizontal:Bool = true, ?allowVertical:Bool = true):Void;
	function enableSnap (snapX:Float, snapY:Float, ?onDrag:Bool = true, ?onRelease:Bool = false, ?snapOffsetX:Float = 0, ?snapOffsetX:Float = 0):Void;
	function disableSnap ():Void;
	function checkBoundsRect ():Void;
	function checkBoundsSprite ():Void;
}
